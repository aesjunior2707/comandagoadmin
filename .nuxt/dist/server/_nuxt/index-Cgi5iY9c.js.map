{"version":3,"file":"index-Cgi5iY9c.js","sources":["../../../../stores/dashboard.ts","../../../../pages/index.vue"],"sourcesContent":["import { defineStore } from 'pinia'\n\ninterface Order {\n  id: number\n  table: number\n  items: number\n  total: number\n  status: 'completed' | 'preparing' | 'served' | 'cancelled'\n  time: Date\n}\n\ninterface DashboardStats {\n  todayRevenue: number\n  todayOrders: number\n  totalTables: number\n  occupiedTables: number\n  staffOnDuty: number\n}\n\ninterface DashboardState {\n  stats: DashboardStats\n  recentOrders: Order[]\n  isLoading: boolean\n}\n\nexport const useDashboardStore = defineStore('dashboard', {\n  state: (): DashboardState => ({\n    stats: {\n      todayRevenue: 4250,\n      todayOrders: 87,\n      totalTables: 24,\n      occupiedTables: 18,\n      staffOnDuty: 8\n    },\n    recentOrders: [\n      { id: 1045, table: 12, items: 3, total: 89.50, status: 'completed', time: new Date(Date.now() - 300000) },\n      { id: 1044, table: 8, items: 5, total: 124.75, status: 'preparing', time: new Date(Date.now() - 600000) },\n      { id: 1043, table: 15, items: 2, total: 45.30, status: 'completed', time: new Date(Date.now() - 900000) },\n      { id: 1042, table: 3, items: 4, total: 78.90, status: 'served', time: new Date(Date.now() - 1200000) },\n      { id: 1041, table: 21, items: 6, total: 156.25, status: 'completed', time: new Date(Date.now() - 1500000) }\n    ],\n    isLoading: false\n  }),\n\n  getters: {\n    dashboardStats: (state) => state.stats,\n    latestOrders: (state) => state.recentOrders.slice(0, 5),\n    todayRevenue: (state) => state.stats.todayRevenue,\n    occupancyRate: (state) => Math.round((state.stats.occupiedTables / state.stats.totalTables) * 100),\n    completedOrdersToday: (state) => state.recentOrders.filter(o => o.status === 'completed').length\n  },\n\n  actions: {\n    async fetchDashboardData() {\n      this.isLoading = true\n      try {\n        // Simulate API call\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        \n        // In a real app, you would fetch data from your API here\n        // For now, we'll just update the timestamp of recent orders\n        this.recentOrders = this.recentOrders.map(order => ({\n          ...order,\n          time: new Date(Date.now() - Math.random() * 3600000) // Random time within last hour\n        }))\n        \n        return { success: true }\n      } catch (error: any) {\n        return { success: false, error: error.message }\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async refreshStats() {\n      this.isLoading = true\n      try {\n        // Simulate API call to refresh stats\n        await new Promise(resolve => setTimeout(resolve, 500))\n        \n        // Update stats with some random variation\n        this.stats.todayRevenue += Math.floor(Math.random() * 100)\n        this.stats.todayOrders += Math.floor(Math.random() * 5)\n        \n        return { success: true }\n      } catch (error: any) {\n        return { success: false, error: error.message }\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    addNewOrder(order: Omit<Order, 'id'>) {\n      const newOrder: Order = {\n        id: Math.max(...this.recentOrders.map(o => o.id)) + 1,\n        ...order\n      }\n      this.recentOrders.unshift(newOrder)\n      \n      // Keep only the latest 10 orders\n      if (this.recentOrders.length > 10) {\n        this.recentOrders = this.recentOrders.slice(0, 10)\n      }\n      \n      // Update stats\n      this.stats.todayOrders++\n      if (order.status === 'completed') {\n        this.stats.todayRevenue += order.total\n      }\n    }\n  }\n})","<template>\n  <div class=\"space-y-8\">\n    <!-- Header -->\n    <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n      <div>\n        <h1 class=\"text-3xl font-bold text-gray-900\">Dashboard</h1>\n        <p class=\"mt-2 text-gray-600\">Bem-vindo de volta, {{ authStore.user?.name }}.  Veja o que está acontecendo no {{ authStore.user?.restaurant?.name }} hoje.</p>\n      </div>\n      <div class=\"mt-4 sm:mt-0 flex space-x-3\">\n        <button @click=\"refreshDashboard\" :disabled=\"dashboardStore.isLoading\" class=\"btn-secondary\">\n          <ArrowPathIcon class=\"w-4 h-4 mr-2\" :class=\"{ 'animate-spin': dashboardStore.isLoading }\" />\n          Refresh\n        </button>\n        <button class=\"btn-primary\">\n          <PlusIcon class=\"w-4 h-4 mr-2\" />\n          Quick Order\n        </button>\n      </div>\n    </div>\n\n    <!-- Key Metrics -->\n    <div class=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n      <div class=\"stat-card\">\n        <div class=\"flex items-center space-x-4\">\n          <div class=\"stat-icon bg-emerald-100\">\n            <CurrencyDollarIcon class=\"w-6 h-6 text-emerald-600\" />\n          </div>\n          <div class=\"flex-1\">\n            <p class=\"text-sm font-medium text-gray-600 mb-1\">Faturamento de Hoje</p>\n            <div class=\"flex items-baseline space-x-2\">\n              <p class=\"text-2xl font-bold text-gray-900\">R${{ dashboardStore.todayRevenue.toLocaleString() }}</p>\n              <span class=\"text-sm font-medium text-emerald-600\">+12.5%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"stat-card\">\n        <div class=\"flex items-center space-x-4\">\n          <div class=\"stat-icon bg-blue-100\">\n            <ReceiptPercentIcon class=\"w-6 h-6 text-blue-600\" />\n          </div>\n          <div class=\"flex-1\">\n            <p class=\"text-sm font-medium text-gray-600 mb-1\">Total de Pedidos de Hoje</p>\n            <div class=\"flex items-baseline space-x-2\">\n              <p class=\"text-2xl font-bold text-gray-900\">{{ dashboardStore.dashboardStats.todayOrders }}</p>\n              <span class=\"text-sm font-medium text-blue-600\">+8.2%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"stat-card\">\n        <div class=\"flex items-center space-x-4\">\n          <div class=\"stat-icon bg-yellow-100\">\n            <TableCellsIcon class=\"w-6 h-6 text-yellow-600\" />\n          </div>\n          <div class=\"flex-1\">\n            <p class=\"text-sm font-medium text-gray-600 mb-1\">Mesas Ocupadas</p>\n            <div class=\"flex items-baseline space-x-2\">\n              <p class=\"text-2xl font-bold text-gray-900\">{{ tablesStore.tableStatusCounts.occupied }}/{{ tablesStore.tableStatusCounts.available + tablesStore.tableStatusCounts.occupied }}</p>\n              <span class=\"text-sm font-medium text-yellow-600\">{{ Math.round((tablesStore.tableStatusCounts.occupied / (tablesStore.tableStatusCounts.available + tablesStore.tableStatusCounts.occupied)) * 100) }}%</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div class=\"stat-card\">\n        <div class=\"flex items-center space-x-4\">\n          <div class=\"stat-icon bg-purple-100\">\n            <UserGroupIcon class=\"w-6 h-6 text-purple-600\" />\n          </div>\n          <div class=\"flex-1\">\n            <p class=\"text-sm font-medium text-gray-600 mb-1\">Total de Garçons</p>\n            <div class=\"flex items-baseline space-x-2\">\n              <p class=\"text-2xl font-bold text-gray-900\">{{ waitersStore.waiterStatusCounts.onDuty }}</p>\n              <span class=\"text-sm font-medium text-purple-600\">Ativo</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Main Content Grid -->\n    <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\n      <!-- Recent Orders -->\n      <div class=\"lg:col-span-2\">\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <div class=\"flex items-center justify-between\">\n              <h2 class=\"text-lg font-semibold text-gray-900\">Pedidos Recentes</h2>\n              <NuxtLink to=\"/history\" class=\"text-sm font-medium text-emerald-600 hover:text-emerald-700\">\n                Ver Todos os Pedidos\n              </NuxtLink>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"overflow-x-auto\">\n              <table class=\"data-table\">\n                <thead>\n                  <tr>\n                    <th>Order</th>\n                    <th>Table</th>\n                    <th>Items</th>\n                    <th>Total</th>\n                    <th>Status</th>\n                  </tr>\n                </thead>\n                <tbody class=\"bg-white divide-y divide-gray-200\">\n                  <tr v-for=\"order in dashboardStore.latestOrders\" :key=\"order.id\">\n                    <td>\n                      <div class=\"font-medium text-gray-900\">#{{ order.id.toString().padStart(4, '0') }}</div>\n                      <div class=\"text-sm text-gray-500\">{{ formatTime(order.time) }}</div>\n                    </td>\n                    <td class=\"font-medium\">Table {{ order.table }}</td>\n                    <td class=\"text-gray-600\">{{ order.items }} items</td>\n                    <td class=\"font-semibold\">R${{ order.total.toFixed(2) }}</td>\n                    <td>\n                      <span :class=\"getOrderStatusClass(order.status)\" class=\"badge\">\n                        {{ order.status }}\n                      </span>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <!-- Right Sidebar -->\n      <div class=\"space-y-6\">\n        <!-- Table Status -->\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h3 class=\"text-lg font-semibold text-gray-900\">Status da Mesas</h3>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"space-y-4\">\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center space-x-3\">\n                  <div class=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n                  <span class=\"text-sm text-gray-600\">Available</span>\n                </div>\n                <span class=\"text-sm font-semibold text-gray-900\">{{ tablesStore.tableStatusCounts.available }}</span>\n              </div>\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center space-x-3\">\n                  <div class=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n                  <span class=\"text-sm text-gray-600\">Occupied</span>\n                </div>\n                <span class=\"text-sm font-semibold text-gray-900\">{{ tablesStore.tableStatusCounts.occupied }}</span>\n              </div>\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center space-x-3\">\n                  <div class=\"w-3 h-3 bg-blue-500 rounded-full\"></div>\n                  <span class=\"text-sm text-gray-600\">Reserved</span>\n                </div>\n                <span class=\"text-sm font-semibold text-gray-900\">{{ tablesStore.tableStatusCounts.reserved }}</span>\n              </div>\n              <div class=\"flex items-center justify-between\">\n                <div class=\"flex items-center space-x-3\">\n                  <div class=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n                  <span class=\"text-sm text-gray-600\">Out of Service</span>\n                </div>\n                <span class=\"text-sm font-semibold text-gray-900\">{{ tablesStore.tableStatusCounts.outOfService }}</span>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-footer\">\n            <NuxtLink to=\"/tables\" class=\"btn-secondary w-full justify-center\">\n              Visualizar Mesas\n            </NuxtLink>\n          </div>\n        </div>\n\n        <!-- Quick Actions -->\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h3 class=\"text-lg font-semibold text-gray-900\">Ações Rápidas</h3>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"grid grid-cols-2 gap-4\">\n              <NuxtLink to=\"/products\" class=\"btn-ghost p-4 flex flex-col items-center text-center space-y-2\">\n                <CubeIcon class=\"w-6 h-6 text-emerald-600\" />\n                <span class=\"text-xs font-medium\">Adicionar Produto</span>\n              </NuxtLink>\n              <NuxtLink to=\"/waiters\" class=\"btn-ghost p-4 flex flex-col items-center text-center space-y-2\">\n                <UserPlusIcon class=\"w-6 h-6 text-blue-600\" />\n                <span class=\"text-xs font-medium\">Adicionar Garçom</span>\n              </NuxtLink>\n              <NuxtLink to=\"/tables\" class=\"btn-ghost p-4 flex flex-col items-center text-center space-y-2\">\n                <TableCellsIcon class=\"w-6 h-6 text-yellow-600\" />\n                <span class=\"text-xs font-medium\">Adicionar Mesa</span>\n              </NuxtLink>\n              <NuxtLink to=\"/categories\" class=\"btn-ghost p-4 flex flex-col items-center text-center space-y-2\">\n                <TagIcon class=\"w-6 h-6 text-purple-600\" />\n                <span class=\"text-xs font-medium\">Categorias</span>\n              </NuxtLink>\n            </div>\n          </div>\n        </div>\n\n        <!-- Top Performing Staff -->\n        <div class=\"card\">\n          <div class=\"card-header\">\n            <h3 class=\"text-lg font-semibold text-gray-900\">Melhores Desempenhos</h3>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"space-y-4\">\n              <div v-for=\"staff in waitersStore.topPerformingWaiters\" :key=\"staff.id\" class=\"flex items-center space-x-3\">\n                <img :src=\"staff.avatar\" :alt=\"staff.name\" class=\"h-10 w-10 rounded-full object-cover\">\n                <div class=\"flex-1 min-w-0\">\n                  <p class=\"text-sm font-medium text-gray-900 truncate\">{{ staff.name }}</p>\n                  <p class=\"text-xs text-gray-500\">{{ staff.tablesServed }} tables today</p>\n                </div>\n                <div class=\"text-right\">\n                  <p class=\"text-sm font-semibold text-gray-900\">{{ staff.rating }}/5</p>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup>\nimport {\n  CurrencyDollarIcon,\n  ReceiptPercentIcon,\n  TableCellsIcon,\n  UserGroupIcon,\n  CubeIcon,\n  UserPlusIcon,\n  TagIcon,\n  PlusIcon,\n  ArrowPathIcon\n} from '@heroicons/vue/24/outline'\n\ndefinePageMeta({\n  middleware: 'auth'\n})\n\nconst authStore = useAuthStore()\nconst dashboardStore = useDashboardStore()\nconst tablesStore = useTablesStore()\nconst waitersStore = useWaitersStore()\n\nconst formatTime = (date) => {\n  return date.toLocaleTimeString('en-US', { \n    hour: '2-digit', \n    minute: '2-digit',\n    hour12: true \n  })\n}\n\nconst getOrderStatusClass = (status) => {\n  const classes = {\n    'completed': 'badge-success',\n    'preparing': 'badge-warning',\n    'served': 'badge-info',\n    'cancelled': 'badge-danger'\n  }\n  return classes[status] || 'badge-info'\n}\n\nconst refreshDashboard = async () => {\n  await dashboardStore.fetchDashboardData()\n}\n\n// Initialize dashboard data on mount\nonMounted(() => {\n  dashboardStore.fetchDashboardData()\n})\n</script>"],"names":["_ssrRenderAttrs","_mergeProps","_unref","_ssrInterpolate","_ssrIncludeBooleanAttr","_ssrRenderComponent","_push","_parent","_createVNode"],"mappings":"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"}