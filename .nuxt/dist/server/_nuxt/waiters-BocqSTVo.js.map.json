{"file":"waiters-BocqSTVo.js","mappings":"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","names":[],"sources":["../../../../stores/waiters.ts"],"sourcesContent":["import { defineStore } from 'pinia'\n\ninterface Waiter {\n  id: number\n  name: string\n  position: string\n  phone: string\n  email: string\n  experience: number\n  status: 'on-duty' | 'on-break' | 'off-duty'\n  tablesServed: number\n  rating: number\n  avatar: string\n}\n\ninterface WaiterState {\n  waiters: Waiter[]\n  isLoading: boolean\n}\n\nexport const useWaitersStore = defineStore('waiters', {\n  state: (): WaiterState => ({\n    waiters: [\n      {\n        id: 1,\n        name: \"John Doe\",\n        position: \"Senior Waiter\",\n        phone: \"+1 (555) 123-4567\",\n        email: \"john.doe@restaurant.com\",\n        experience: 5,\n        status: \"on-duty\",\n        tablesServed: 8,\n        rating: 4.8,\n        avatar: \"https://images.pexels.com/photos/1043471/pexels-photo-1043471.jpeg?auto=compress&cs=tinysrgb&w=400\",\n      },\n      {\n        id: 2,\n        name: \"Jane Smith\",\n        position: \"Waiter\",\n        phone: \"+1 (555) 234-5678\",\n        email: \"jane.smith@restaurant.com\",\n        experience: 3,\n        status: \"on-break\",\n        tablesServed: 5,\n        rating: 4.6,\n        avatar: \"https://images.pexels.com/photos/1065084/pexels-photo-1065084.jpeg?auto=compress&cs=tinysrgb&w=400\",\n      },\n      {\n        id: 3,\n        name: \"Mike Johnson\",\n        position: \"Head Waiter\",\n        phone: \"+1 (555) 345-6789\",\n        email: \"mike.johnson@restaurant.com\",\n        experience: 8,\n        status: \"on-duty\",\n        tablesServed: 12,\n        rating: 4.9,\n        avatar: \"https://images.pexels.com/photos/1040880/pexels-photo-1040880.jpeg?auto=compress&cs=tinysrgb&w=400\",\n      },\n      {\n        id: 4,\n        name: \"Sarah Wilson\",\n        position: \"Waiter\",\n        phone: \"+1 (555) 456-7890\",\n        email: \"sarah.wilson@restaurant.com\",\n        experience: 2,\n        status: \"on-duty\",\n        tablesServed: 6,\n        rating: 4.4,\n        avatar: \"https://images.pexels.com/photos/1036622/pexels-photo-1036622.jpeg?auto=compress&cs=tinysrgb&w=400\",\n      },\n      {\n        id: 5,\n        name: \"David Brown\",\n        position: \"Sommelier\",\n        phone: \"+1 (555) 567-8901\",\n        email: \"david.brown@restaurant.com\",\n        experience: 12,\n        status: \"off-duty\",\n        tablesServed: 0,\n        rating: 4.7,\n        avatar: \"https://images.pexels.com/photos/1043474/pexels-photo-1043474.jpeg?auto=compress&cs=tinysrgb&w=400\",\n      },\n      {\n        id: 6,\n        name: \"Lisa Garcia\",\n        position: \"Waiter\",\n        phone: \"+1 (555) 678-9012\",\n        email: \"lisa.garcia@restaurant.com\",\n        experience: 4,\n        status: \"on-duty\",\n        tablesServed: 9,\n        rating: 4.5,\n        avatar: \"https://images.pexels.com/photos/1043473/pexels-photo-1043473.jpeg?auto=compress&cs=tinysrgb&w=400\",\n      }\n    ],\n    isLoading: false\n  }),\n\n  getters: {\n    allWaiters: (state) => state.waiters,\n    onDutyWaiters: (state) => state.waiters.filter(w => w.status === 'on-duty'),\n    onBreakWaiters: (state) => state.waiters.filter(w => w.status === 'on-break'),\n    offDutyWaiters: (state) => state.waiters.filter(w => w.status === 'off-duty'),\n    totalWaiters: (state) => state.waiters.length,\n    topPerformingWaiters: (state) => \n      [...state.waiters]\n        .filter(w => w.status === 'on-duty')\n        .sort((a, b) => b.tablesServed - a.tablesServed)\n        .slice(0, 3),\n    getWaiterById: (state) => (id: number) => state.waiters.find(w => w.id === id),\n    waiterStatusCounts: (state) => ({\n      onDuty: state.waiters.filter(w => w.status === 'on-duty').length,\n      onBreak: state.waiters.filter(w => w.status === 'on-break').length,\n      offDuty: state.waiters.filter(w => w.status === 'off-duty').length\n    })\n  },\n\n  actions: {\n    async addWaiter(waiterData: Omit<Waiter, 'id' | 'status' | 'tablesServed' | 'rating'>) {\n      this.isLoading = true\n      try {\n        const newWaiter: Waiter = {\n          id: Math.max(...this.waiters.map(w => w.id)) + 1,\n          ...waiterData,\n          status: 'off-duty',\n          tablesServed: 0,\n          rating: 4.0\n        }\n        this.waiters.push(newWaiter)\n        return { success: true, waiter: newWaiter }\n      } catch (error: any) {\n        return { success: false, error: error.message }\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async updateWaiterStatus(waiterId: number, status: Waiter['status']) {\n      const waiter = this.waiters.find(w => w.id === waiterId)\n      if (waiter) {\n        waiter.status = status\n        if (status === 'off-duty') {\n          waiter.tablesServed = 0\n        }\n        return { success: true, waiter }\n      }\n      return { success: false, error: 'Waiter not found' }\n    },\n\n    async updateWaiter(waiterId: number, updates: Partial<Waiter>) {\n      this.isLoading = true\n      try {\n        const waiterIndex = this.waiters.findIndex(w => w.id === waiterId)\n        if (waiterIndex !== -1) {\n          this.waiters[waiterIndex] = { ...this.waiters[waiterIndex], ...updates }\n          return { success: true, waiter: this.waiters[waiterIndex] }\n        }\n        return { success: false, error: 'Waiter not found' }\n      } catch (error: any) {\n        return { success: false, error: error.message }\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    async deleteWaiter(waiterId: number) {\n      this.isLoading = true\n      try {\n        const waiterIndex = this.waiters.findIndex(w => w.id === waiterId)\n        if (waiterIndex !== -1) {\n          this.waiters.splice(waiterIndex, 1)\n          return { success: true }\n        }\n        return { success: false, error: 'Waiter not found' }\n      } catch (error: any) {\n        return { success: false, error: error.message }\n      } finally {\n        this.isLoading = false\n      }\n    },\n\n    incrementTablesServed(waiterId: number) {\n      const waiter = this.waiters.find(w => w.id === waiterId)\n      if (waiter) {\n        waiter.tablesServed++\n      }\n    }\n  }\n})"],"version":3}